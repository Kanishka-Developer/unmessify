name: Convert CSV to JSON

on:
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write

concurrency:
  group: csv-to-json-${{ github.ref }}
  cancel-in-progress: true

jobs:
  convert-csv-to-json:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Determine changed CSVs and target JSONs
        id: changes
        shell: bash
        run: |
          set -e
          # Find changed CSV files
          if [ "${{ github.event_name }}" = "push" ]; then
            git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- 'csv/**/*.csv' > changed_csvs.txt || true
          else
            git fetch origin ${{ github.base_ref }} --depth=1 || true
            git fetch origin ${{ github.head_ref }} --depth=1 || true
            git diff --name-only origin/${{ github.base_ref }}...origin/${{ github.head_ref }} -- 'csv/**/*.csv' > changed_csvs.txt || true
          fi
          # Map to json/en/*.json (for info only)
          : > changed_jsons.txt
          if [ -s changed_csvs.txt ]; then
            while IFS= read -r f; do
              bn=$(basename "$f")
              name="${bn%.csv}.json"
              echo "json/en/$name" >> changed_jsons.txt
            done < changed_csvs.txt
          fi
          csv_count=$(grep -c . changed_csvs.txt || true)
          echo "csv_count=$csv_count" >> $GITHUB_OUTPUT
          echo "Changed JSON targets (json/en):"
          cat changed_jsons.txt || true

      - name: Convert changed CSV files to JSON
        if: steps.changes.outputs.csv_count != '0'
        run: python convert_csv_to_json.py --from-file changed_csvs.txt

      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain json/en)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes (json/en only)
        if: steps.verify-changed-files.outputs.changed == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add json/en/
          git commit -m "chore(data): update json/en from CSV changes"
          git push

      - name: Upload JSON artifacts (PR preview)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: json-en-files
          path: json/en/
          retention-days: 7
